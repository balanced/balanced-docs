{
 "endpoints": [
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_accounts.index", 
   "path": "/v1/bank_accounts"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "bank_accounts.create", 
   "path": "/v1/bank_accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplaces.index", 
   "path": "/v1/marketplaces"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "marketplaces.create", 
   "path": "/v1/marketplaces"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "chargebacks.index", 
   "path": "/v1/chargebacks"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "merchants.index", 
   "path": "/v1/merchants"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customers.index", 
   "path": "/v1/customers"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customers.create", 
   "path": "/v1/customers"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "api_keys.index", 
   "path": "/v1/api_keys"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "api_keys.create", 
   "path": "/v1/api_keys"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "credits.index", 
   "path": "/v1/credits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "credits.create", 
   "path": "/v1/credits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "search.index", 
   "path": "/v1/search"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "events.index", 
   "path": "/v1/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_bank_accounts.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "account_bank_accounts.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "account_bank_accounts.delete", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_credits.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "account_credits.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "refunds.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "refunds.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "debits.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_cards.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/cards/:card_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "account_cards.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/cards/:card_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "holds.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "holds.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debit_refunds.show", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "debit_refunds.update", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.show", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "debits.update", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "event_callback_logs.show", 
   "path": "/v1/events/:event_id/callbacks/:callback_id/logs/:log_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_transactions.index", 
   "path": "/v1/marketplaces/:marketplace_id/bank_accounts/:bank_account_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_bank_accounts.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/bank_accounts"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "account_bank_accounts.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/bank_accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_transactions.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_credits.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/credits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "account_credits.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/credits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "refunds.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/refunds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "refunds.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/refunds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/debits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "debits.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/debits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_cards.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/cards"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "account_cards.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/cards"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "holds.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/holds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "holds.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id/holds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debit_refunds.index", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id/refunds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "debit_refunds.create", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id/refunds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.index", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id/debits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "debits.create", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id/debits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "event_callback_logs.index", 
   "path": "/v1/events/:event_id/callbacks/:callback_id/logs"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications_2.show", 
   "path": "/v1/bank_accounts/:bank_account_id/authentications/:verification_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "bank_account_authentications_2.update", 
   "path": "/v1/bank_accounts/:bank_account_id/authentications/:verification_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications.show", 
   "path": "/v1/bank_accounts/:bank_account_id/verifications/:verification_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "bank_account_authentications.update", 
   "path": "/v1/bank_accounts/:bank_account_id/verifications/:verification_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_credits.show", 
   "path": "/v1/bank_accounts/:bank_account_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_bank_accounts.show", 
   "path": "/v1/marketplaces/:marketplace_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "marketplace_bank_accounts.update", 
   "path": "/v1/marketplaces/:marketplace_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_statistics.show", 
   "path": "/v1/marketplaces/:marketplace_id/statistics/:query_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_callbacks.show", 
   "path": "/v1/marketplaces/:marketplace_id/callbacks/:callback_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "marketplace_callbacks.delete", 
   "path": "/v1/marketplaces/:marketplace_id/callbacks/:callback_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "accounts.show", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "accounts.update", 
   "path": "/v1/marketplaces/:marketplace_id/accounts/:account_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_credits.show", 
   "path": "/v1/marketplaces/:marketplace_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "marketplace_credits.update", 
   "path": "/v1/marketplaces/:marketplace_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "refunds.show", 
   "path": "/v1/marketplaces/:marketplace_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "refunds.update", 
   "path": "/v1/marketplaces/:marketplace_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.show", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "debits.update", 
   "path": "/v1/marketplaces/:marketplace_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_cards.show", 
   "path": "/v1/marketplaces/:marketplace_id/cards/:card_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "marketplace_cards.update", 
   "path": "/v1/marketplaces/:marketplace_id/cards/:card_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "holds.show", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "holds.update", 
   "path": "/v1/marketplaces/:marketplace_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_bank_accounts.show", 
   "path": "/v1/customers/:customer_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_bank_accounts.update", 
   "path": "/v1/customers/:customer_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "customer_bank_accounts.delete", 
   "path": "/v1/customers/:customer_id/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "api_keys.show", 
   "path": "/v1/merchants/:merchant_id/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "api_keys.update", 
   "path": "/v1/merchants/:merchant_id/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "api_keys.delete", 
   "path": "/v1/merchants/:merchant_id/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_credits.show", 
   "path": "/v1/customers/:customer_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_credits.update", 
   "path": "/v1/customers/:customer_id/credits/:credit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_refunds.show", 
   "path": "/v1/customers/:customer_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_refunds.update", 
   "path": "/v1/customers/:customer_id/refunds/:refund_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_debits.show", 
   "path": "/v1/customers/:customer_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_debits.update", 
   "path": "/v1/customers/:customer_id/debits/:debit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_cards.show", 
   "path": "/v1/customers/:customer_id/cards/:card_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_cards.update", 
   "path": "/v1/customers/:customer_id/cards/:card_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "customer_cards.delete", 
   "path": "/v1/customers/:customer_id/cards/:card_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_holds.show", 
   "path": "/v1/customers/:customer_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customer_holds.update", 
   "path": "/v1/customers/:customer_id/holds/:hold_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "event_callbacks.show", 
   "path": "/v1/events/:event_id/callbacks/:callback_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "event_callbacks.update", 
   "path": "/v1/events/:event_id/callbacks/:callback_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications_2.index", 
   "path": "/v1/bank_accounts/:bank_account_id/authentications"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "bank_account_authentications_2.create", 
   "path": "/v1/bank_accounts/:bank_account_id/authentications"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications.index", 
   "path": "/v1/bank_accounts/:bank_account_id/verifications"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "bank_account_authentications.create", 
   "path": "/v1/bank_accounts/:bank_account_id/verifications"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications_2.show_current", 
   "path": "/v1/bank_accounts/:bank_account_id/verification"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "bank_account_authentications_2.update_current", 
   "path": "/v1/bank_accounts/:bank_account_id/verification"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_authentications.show_current", 
   "path": "/v1/bank_accounts/:bank_account_id/verification"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "bank_account_authentications.update_current", 
   "path": "/v1/bank_accounts/:bank_account_id/verification"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_transactions.index", 
   "path": "/v1/bank_accounts/:bank_account_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_account_credits.index", 
   "path": "/v1/bank_accounts/:bank_account_id/credits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "bank_account_credits.create", 
   "path": "/v1/bank_accounts/:bank_account_id/credits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_statistics.show", 
   "path": "/v1/marketplaces/statistics/:query_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "transaction_statistics.show", 
   "path": "/v1/transactions/statistics/:query_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_bank_accounts.index", 
   "path": "/v1/marketplaces/:marketplace_id/bank_accounts"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "marketplace_bank_accounts.create", 
   "path": "/v1/marketplaces/:marketplace_id/bank_accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "transactions.index", 
   "path": "/v1/marketplaces/:marketplace_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_callbacks.index", 
   "path": "/v1/marketplaces/:marketplace_id/callbacks"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "marketplace_callbacks.create", 
   "path": "/v1/marketplaces/:marketplace_id/callbacks"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "accounts.index", 
   "path": "/v1/marketplaces/:marketplace_id/accounts"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "accounts.create", 
   "path": "/v1/marketplaces/:marketplace_id/accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_credits.index", 
   "path": "/v1/marketplaces/:marketplace_id/credits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "marketplace_credits.create", 
   "path": "/v1/marketplaces/:marketplace_id/credits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "refunds.index", 
   "path": "/v1/marketplaces/:marketplace_id/refunds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "refunds.create", 
   "path": "/v1/marketplaces/:marketplace_id/refunds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debits.index", 
   "path": "/v1/marketplaces/:marketplace_id/debits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "debits.create", 
   "path": "/v1/marketplaces/:marketplace_id/debits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_search.index", 
   "path": "/v1/marketplaces/:marketplace_id/search"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_events.index", 
   "path": "/v1/marketplaces/:marketplace_id/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplace_cards.index", 
   "path": "/v1/marketplaces/:marketplace_id/cards"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "marketplace_cards.create", 
   "path": "/v1/marketplaces/:marketplace_id/cards"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "holds.index", 
   "path": "/v1/marketplaces/:marketplace_id/holds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "holds.create", 
   "path": "/v1/marketplaces/:marketplace_id/holds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "merchant_statistics.show", 
   "path": "/v1/merchants/statistics/:query_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_bank_accounts.index", 
   "path": "/v1/customers/:customer_id/bank_accounts"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_bank_accounts.create", 
   "path": "/v1/customers/:customer_id/bank_accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_transactions.index", 
   "path": "/v1/customers/:customer_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "merchant_accounts.index", 
   "path": "/v1/merchants/:merchant_id/accounts"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "api_keys.index", 
   "path": "/v1/merchants/:merchant_id/api_keys"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "api_keys.create", 
   "path": "/v1/merchants/:merchant_id/api_keys"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_credits.index", 
   "path": "/v1/customers/:customer_id/credits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_credits.create", 
   "path": "/v1/customers/:customer_id/credits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_refunds.index", 
   "path": "/v1/customers/:customer_id/refunds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_refunds.create", 
   "path": "/v1/customers/:customer_id/refunds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_debits.index", 
   "path": "/v1/customers/:customer_id/debits"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_debits.create", 
   "path": "/v1/customers/:customer_id/debits"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_cards.index", 
   "path": "/v1/customers/:customer_id/cards"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_cards.create", 
   "path": "/v1/customers/:customer_id/cards"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customer_holds.index", 
   "path": "/v1/customers/:customer_id/holds"
  }, 
  {
   "methods": [
    "POST"
   ], 
   "name": "customer_holds.create", 
   "path": "/v1/customers/:customer_id/holds"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "account_search.index", 
   "path": "/v1/accounts/:account_id/search"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "credit_events.index", 
   "path": "/v1/credits/:credit_id/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "refund_events.index", 
   "path": "/v1/refunds/:refund_id/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "event_callbacks.index", 
   "path": "/v1/events/:event_id/callbacks"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "debit_events.index", 
   "path": "/v1/debits/:debit_id/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "card_transactions.index", 
   "path": "/v1/cards/:card_id/transactions"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "hold_events.index", 
   "path": "/v1/holds/:hold_id/events"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "iin.show", 
   "path": "/v1/cards/:card_id/iin"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "bank_accounts.show", 
   "path": "/v1/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "bank_accounts.update", 
   "path": "/v1/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "bank_accounts.delete", 
   "path": "/v1/bank_accounts/:bank_account_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "marketplaces.show", 
   "path": "/v1/marketplaces/:marketplace_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "marketplaces.update", 
   "path": "/v1/marketplaces/:marketplace_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "chargebacks.show", 
   "path": "/v1/chargebacks/:chargeback_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "merchants.show", 
   "path": "/v1/merchants/:merchant_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "merchants.update", 
   "path": "/v1/merchants/:merchant_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "customers.show", 
   "path": "/v1/customers/:customer_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "customers.update", 
   "path": "/v1/customers/:customer_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "customers.delete", 
   "path": "/v1/customers/:customer_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "api_keys.show", 
   "path": "/v1/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "PUT"
   ], 
   "name": "api_keys.update", 
   "path": "/v1/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "DELETE"
   ], 
   "name": "api_keys.delete", 
   "path": "/v1/api_keys/:api_key_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "credits.show", 
   "path": "/v1/credits/:credit_id"
  }, 
  {
   "methods": [
    "HEAD", 
    "GET"
   ], 
   "name": "events.show", 
   "path": "/v1/events/:event_id"
  }
 ], 
 "enums": [
  {
   "name": "AuditEventType", 
   "values": {
    "account.created": "Occurs whenever a new account is created.", 
    "account.updated": "Occurs whenever an account is updated.", 
    "credit.canceled": "Occurs whenever a credit is canceled.", 
    "credit.created": "Occurs whenever a new credit is created.", 
    "credit.failed": "Occurs whenever a credit is rejected.", 
    "credit.succeeded": "Occurs whenever a credit is successfully captured or deposited.", 
    "credit.updated": "Occurs whenever a credit is updated.", 
    "debit.canceled": "Occurs whenever a debit is canceled.", 
    "debit.created": "Occurs whenever a new debit is created.", 
    "debit.failed": "Occurs whenever a debit is rejected.", 
    "debit.succeeded": "Occurs whenever a debit is successfully captured or withdrawn.", 
    "debit.updated": "Occurs whenever a debit is updated.", 
    "hold.captured": "Occurs whenever a hold is captured.", 
    "hold.created": "Occurs whenever a new hold is created.", 
    "hold.updated": "Occurs whenever a hold is updated.", 
    "hold.voided": "Occurs whenever a hold is voided.", 
    "refund.canceled": "Occurs whenever a refund is canceled.", 
    "refund.created": "Occurs whenever a new refund is created.", 
    "refund.failed": "Occurs whenever a refund is rejected.", 
    "refund.succeeded": "Occurs whenever a refund is successfully captured or deposited.", 
    "refund.updated": "Occurs whenever a refund is updated."
   }
  }
 ], 
 "errors": [
  {
   "additional": null, 
   "category_code": "authorization-failed", 
   "category_type": "banking", 
   "description": "The processor did not accept this hold.", 
   "status": null, 
   "status_code": 402
  }, 
  {
   "additional": null, 
   "category_code": "card-declined", 
   "category_type": "banking", 
   "description": "This card was declined by the processor.", 
   "status": null, 
   "status_code": 402
  }, 
  {
   "additional": null, 
   "category_code": "funding-destination-declined", 
   "category_type": "banking", 
   "description": "The processor did not accept the transaction.", 
   "status": null, 
   "status_code": 402
  }, 
  {
   "additional": null, 
   "category_code": "account-already-merchant", 
   "category_type": "logical", 
   "description": "The account is already a merchant.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "address-verification-failed", 
   "category_type": "logical", 
   "description": "This address could not be verified.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "authorization-expired", 
   "category_type": "logical", 
   "description": "This hold has already expired.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-already-associated", 
   "category_type": "logical", 
   "description": "The bank account is already associated with an account -- it cannot be\nassociated.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-authentication-already-exists", 
   "category_type": "logical", 
   "description": "Bank account authentication amounts do not match.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-authentication-failed", 
   "category_type": "logical", 
   "description": "Bank account authentication amounts do not match.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-authentication-not-pending", 
   "category_type": "logical", 
   "description": "Bank account authentication is not in state ``pending``.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-not-associated", 
   "category_type": "logical", 
   "description": "The bank account is not associated with the given account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "bank-account-not-valid", 
   "category_type": "logical", 
   "description": "This bank account has already been marked as invalid/deactivated. It cannot\nbe used again.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "business-kyc", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "business-principal-kyc", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "cannot-associate-bank-account", 
   "category_type": "logical", 
   "description": "The bank account was tokenized on a different marketplace than the one\nused for this request.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "cannot-associate-card", 
   "category_type": "logical", 
   "description": "The card was tokenized on a different marketplace than the one used for\nthis request.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "cannot-associate-merchant-with-account", 
   "category_type": "logical", 
   "description": "The merchant information was created on a different marketplace than the\none used for this request.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "cannot-capture-authorization", 
   "category_type": "logical", 
   "description": "This hold has already been captured or voided, and cannot be captured.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "cannot-void-authorization", 
   "category_type": "logical", 
   "description": "This hold has already been captured or voided, and cannot be voided.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "capture-void-attempt", 
   "category_type": "logical", 
   "description": "This hold has already been captured, which cannot be reversed.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "card-already-funding-src", 
   "category_type": "logical", 
   "description": "The card is already associated with an account -- it cannot be associated\nagain.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "card-not-associated", 
   "category_type": "logical", 
   "description": "The card is not associated with the given account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "card-not-valid", 
   "category_type": "logical", 
   "description": "This card has already been marked as invalid/deactivated. It cannot be used\nagain.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "card-not-validated", 
   "category_type": "logical", 
   "description": "The card could not be validated -- either the card number or security code\nmay be wrong.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "debit-already-refunded", 
   "category_type": "logical", 
   "description": "Debit has already been fully refunded.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "debit-not-found", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "duplicate-email-address", 
   "category_type": "logical", 
   "description": "An account with the given email address already exists.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-destination-already-associated", 
   "category_type": "logical", 
   "description": "The given funding destination is already associated with an account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-destination-not-associated", 
   "category_type": "logical", 
   "description": "The given funding destination is not associated with the account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-destination-not-creditable", 
   "category_type": "logical", 
   "description": "The given funding destination cannot have a credit created against it.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-already-associated", 
   "category_type": "logical", 
   "description": "The given funding source is already associated with an account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-not-associated", 
   "category_type": "logical", 
   "description": "The given funding source is not associated with an account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-not-authorizable", 
   "category_type": "logical", 
   "description": "The given funding source cannot have an authorization created against\nit. Authorizations are only valid for card-type funding sources.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-not-debitable", 
   "category_type": "logical", 
   "description": "The given funding source cannot have a debit created against it.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-not-hold", 
   "category_type": "logical", 
   "description": "The given funding source cannot have a hold created against it.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "funding-source-not-refundable", 
   "category_type": "logical", 
   "description": "The given funding source cannot be refunded.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "hold-not-associated-account", 
   "category_type": "logical", 
   "description": "This hold is not associated with this account.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "hold-not-associated-marketplace", 
   "category_type": "logical", 
   "description": "This hold is not associated with this marketplace.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "identity-verification-error", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "insufficient-funds", 
   "category_type": "logical", 
   "description": "Marketplace balance is insufficient to issue this credit", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "insufficient-funds", 
   "category_type": "logical", 
   "description": "Marketplace escrow balance is insufficient to issue this credit.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "insufficient-funds", 
   "category_type": "logical", 
   "description": "Account balance is insufficient to issue this debit", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "marketplace-already-created", 
   "category_type": "logical", 
   "description": "Marketplace has already been created.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "marketplace-cannot-prepay-fees", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "multiple-debits", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "no-funding-destination", 
   "category_type": "logical", 
   "description": "The account has no valid funding destinations.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "no-funding-source", 
   "category_type": "logical", 
   "description": "The account has no valid funding sources.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "person-kyc", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "precog-logical-error", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "refund-insufficient-funds", 
   "category_type": "logical", 
   "description": "Marketplace escrow balance is insufficient to issue this refund.", 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "unexpected-payload", 
   "category_type": "logical", 
   "description": null, 
   "status": null, 
   "status_code": 409
  }, 
  {
   "additional": null, 
   "category_code": "incomplete-account-info", 
   "category_type": "request", 
   "description": "No buyer or merchant info was provided. Either \"merchant/merchant_uri\" or\n\"card/card_uri\" fields must be present.", 
   "status": null, 
   "status_code": 400
  }, 
  {
   "additional": null, 
   "category_code": "invalid-amount", 
   "category_type": "request", 
   "description": "Refund amount cannot be greater than the amount of the original debit.", 
   "status": null, 
   "status_code": 400
  }, 
  {
   "additional": null, 
   "category_code": "invalid-bank-account-number", 
   "category_type": "request", 
   "description": "This bank account number is not alpha numeric (ascii). It can not be used.", 
   "status": null, 
   "status_code": 400
  }, 
  {
   "additional": null, 
   "category_code": "invalid-routing-number", 
   "category_type": "request", 
   "description": "The routing number provided for the bank account was invalid.", 
   "status": null, 
   "status_code": 400
  }, 
  {
   "additional": null, 
   "category_code": "precog-bad-request", 
   "category_type": "request", 
   "description": null, 
   "status": null, 
   "status_code": 400
  }, 
  {
   "additional": null, 
   "category_code": "refund-invalid-debit-state", 
   "category_type": "request", 
   "description": "State of debit to refund must be ``succeeded``.", 
   "status": null, 
   "status_code": 400
  }
 ], 
 "forms": [
  {
   "fields": [
    {
     "default": {
      "fields": [
       {
        "default": {}, 
        "description": "Single level mapping from string keys to string values.", 
        "name": "meta", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "key-value", 
        "validate": null
       }, 
       {
        "description": null, 
        "fields": [
         {
          "description": null, 
          "fields": [
           {
            "description": "Bank account code.", 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "Bank account code.", 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }
        ], 
        "required": true, 
        "tags": [], 
        "type": "select"
       }, 
       {
        "default": "checking", 
        "description": "``checking`` or ``savings``.", 
        "fields": [
         {
          "description": null, 
          "name": "account_type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": [
         "account_type", 
         "type"
        ], 
        "required": false, 
        "tags": [], 
        "type": "one", 
        "validate": null
       }, 
       {
        "description": "Name on the bank account.", 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Bank account number.", 
        "name": "account_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }
      ], 
      "name": "BankAccountCreateForm", 
      "tags": [], 
      "type": "form"
     }, 
     "description": "- Tokenized bank account URI.\n- Tokenized bank account URI.", 
     "fields": [
      {
       "description": "Tokenized bank account URI.", 
       "name": "uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Tokenized bank account URI.", 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "uri", 
      "bank_account_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AccountBankAccountCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": {
      "fields": [
       {
        "description": "E.164 formatted phone number.", 
        "name": "phone_number", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "The 3-4 digit security code for the card.", 
        "name": "security_code", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": null, 
        "name": "name", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Expiration year.", 
        "name": "expiration_year", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "integer", 
        "validate": null
       }, 
       {
        "description": "The digits of the credit card number.", 
        "name": "card_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Expiration month (e.g. 1 for January).", 
        "name": "expiration_month", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "integer", 
        "validate": null
       }, 
       {
        "default": true, 
        "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``).", 
        "name": "is_valid", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "boolean", 
        "validate": null
       }, 
       {
        "fields": [
         {
          "default": null, 
          "description": "City.", 
          "name": "city", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
          "fields": [
           {
            "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
            "name": "region", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "US state. This field has been **deprecated**.", 
            "name": "state", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "region", 
           "state"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
          "name": "postal_code", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "Street address.\n*requires* ``postal_code``.", 
          "name": "street_address", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": "USA", 
          "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
          "name": "country_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": "AddressCreateForm", 
        "tags": [], 
        "type": "form"
       }, 
       {
        "default": {}, 
        "description": "Single level mapping from string keys to string values.", 
        "name": "meta", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "key-value", 
        "validate": null
       }
      ], 
      "name": "CardCreateForm", 
      "tags": [], 
      "type": "form"
     }, 
     "description": "- Tokenized card URI.\n- Tokenized card URI.", 
     "fields": [
      {
       "description": "Tokenized card URI.", 
       "name": "uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Tokenized card URI.", 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "uri", 
      "card_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AccountCardCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": "If a ``card`` is provided with a ``name`` then that is used as the\ndefault. Otherwise no default is provided and this field is\n**required**.", 
     "description": "The display ``name`` of the account.", 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "Email address of the account. It must be **unique** among all accounts\non your marketplace.", 
     "name": "email_address", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": "- The URI of the tokenized card.\n- If you are not tokenizing the card you may pass the data straight\n  through as a map.", 
     "fields": [
      {
       "description": "The URI of the tokenized card.", 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "If you are not tokenizing the card you may pass the data straight\nthrough as a map.", 
       "form": {
        "fields": [
         {
          "description": "The digits of the credit card number.", 
          "name": "card_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Expiration year.", 
          "name": "expiration_year", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "Expiration month (e.g. 1 for January).", 
          "name": "expiration_month", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "The 3-4 digit security code for the card.", 
          "name": "security_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "name", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "E.164 formatted phone number.", 
          "name": "phone_number", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "fields": [
           {
            "default": null, 
            "description": "City.", 
            "name": "city", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
            "fields": [
             {
              "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
              "name": "region", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "US state. This field has been **deprecated**.", 
              "name": "state", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "region", 
             "state"
            ], 
            "required": false, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
            "name": "postal_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "Street address.\n*requires* ``postal_code``.", 
            "name": "street_address", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": "USA", 
            "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
            "name": "country_code", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": "AddressCreateForm", 
          "tags": [], 
          "type": "form"
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }, 
         {
          "default": true, 
          "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``).", 
          "name": "is_valid", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "boolean", 
          "validate": null
         }
        ], 
        "name": "CardCreateForm", 
        "type": "form"
       }, 
       "name": "card", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "card_uri", 
      "card"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "- The URI of the bank account created via *balanced.js*.\n- Bank account information:", 
     "fields": [
      {
       "description": "The URI of the bank account created via *balanced.js*.", 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Bank account information:", 
       "form": {
        "fields": [
         {
          "description": "Name on the bank account.", 
          "name": "name", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Bank account number.", 
          "name": "account_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "fields": [
             {
              "description": "Bank account code.", 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "Bank account code.", 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": null, 
            "fields": [
             {
              "description": null, 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": null, 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }
          ], 
          "required": true, 
          "tags": [], 
          "type": "select"
         }, 
         {
          "default": "checking", 
          "description": "``checking`` or ``savings``.", 
          "fields": [
           {
            "description": null, 
            "name": "account_type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "account_type", 
           "type"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }
        ], 
        "name": "BankAccountCreateForm", 
        "type": "form"
       }, 
       "name": "bank_account", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "bank_account_uri", 
      "bank_account"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "- The URI of the merchant account created during a request for more\n  information.\n- Merchant account information.", 
     "fields": [
      {
       "description": "The URI of the merchant account created during a request for more\ninformation.", 
       "name": "merchant_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Merchant account information.", 
       "form": {
        "fields": [
         {
          "description": "Merchant type. It should be one of: ``person`` or ``business``.", 
          "name": "type", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "E.164 formatted phone number.", 
          "name": "phone_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "RFC-2822 formatted email address.", 
          "name": "email_address", 
          "nullable": true, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }, 
         {
          "default": "For *person* merchants `tax_id` is optional, defaulting to ``null``.\nFor *business* merchants `tax_id` is required.", 
          "description": null, 
          "name": "tax_id", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": null, 
          "name": "ssn_last_4", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": "For *person* merchants `dob` is required. For *business* merchants\n`dob` is optional, defaulting to ``null``.", 
          "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
          "name": "dob", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": null, 
          "form": {
           "fields": [
            {
             "description": null, 
             "name": "name", 
             "nullable": false, 
             "required": true, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
             "name": "dob", 
             "nullable": false, 
             "required": true, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "fields": [
              {
               "default": null, 
               "description": "City.", 
               "name": "city", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
               "fields": [
                {
                 "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
                 "name": "region", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }, 
                {
                 "description": "US state. This field has been **deprecated**.", 
                 "name": "state", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }
               ], 
               "name": [
                "region", 
                "state"
               ], 
               "required": false, 
               "tags": [], 
               "type": "one", 
               "validate": null
              }, 
              {
               "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
               "name": "postal_code", 
               "nullable": false, 
               "required": true, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "default": null, 
               "description": "Street address.\n*requires* ``postal_code``.", 
               "name": "street_address", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "default": "USA", 
               "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
               "name": "country_code", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }
             ], 
             "name": "AddressCreateForm", 
             "tags": [], 
             "type": "form"
            }, 
            {
             "description": null, 
             "name": "tax_id", 
             "nullable": false, 
             "required": false, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "default": null, 
             "description": null, 
             "name": "ssn_last_4", 
             "nullable": false, 
             "required": false, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }
           ], 
           "name": "PersonCreateForm", 
           "type": "form"
          }, 
          "name": "person", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "form_field", 
          "validate": null
         }, 
         {
          "default": "If an account is referenced in the resolving URI then the default is\nnull. If this is nested in an account creation then the account\n``name`` is used. Otherwise no default is provided and this field is\nrequired.", 
          "description": null, 
          "name": "name", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "Flag value, should be ``true`` or ``false``.", 
          "name": "production", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "boolean", 
          "validate": null
         }, 
         {
          "fields": [
           {
            "default": null, 
            "description": "City.", 
            "name": "city", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
            "fields": [
             {
              "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
              "name": "region", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "US state. This field has been **deprecated**.", 
              "name": "state", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "region", 
             "state"
            ], 
            "required": false, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
            "name": "postal_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "Street address.\n*requires* ``postal_code``.", 
            "name": "street_address", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": "USA", 
            "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
            "name": "country_code", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": "AddressCreateForm", 
          "tags": [], 
          "type": "form"
         }
        ], 
        "name": "MerchantAccountCreateForm", 
        "type": "form"
       }, 
       "name": "merchant", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "merchant_uri", 
      "merchant"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AccountCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "USD cents.", 
     "name": "amount", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "description", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "destination_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "destination_uri", 
      "bank_account_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AccountCreditCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "description", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "AccountCreditUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "fields": [
      {
       "description": "If `account` is a merchant then:", 
       "fields": [
        {
         "description": null, 
         "name": "merchant_uri", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": null, 
         "form": {
          "fields": [
           {
            "description": null, 
            "name": "name", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "RFC-2822 formatted email address.", 
            "name": "email_address", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "E.164 formatted phone number.", 
            "name": "phone_number", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "Single level mapping from string keys to string values.", 
            "name": "meta", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "key-value", 
            "validate": null
           }, 
           {
            "description": null, 
            "form": {
             "fields": [
              {
               "description": "Name on the bank account.", 
               "name": "name", 
               "nullable": false, 
               "required": true, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "description": "Bank account number.", 
               "name": "account_number", 
               "nullable": false, 
               "required": true, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "description": null, 
               "fields": [
                {
                 "description": null, 
                 "fields": [
                  {
                   "description": "Bank account code.", 
                   "name": "bank_code", 
                   "nullable": false, 
                   "required": true, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }, 
                  {
                   "description": "Bank account code.", 
                   "name": "routing_number", 
                   "nullable": false, 
                   "required": true, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }
                 ], 
                 "name": [
                  "bank_code", 
                  "routing_number"
                 ], 
                 "required": true, 
                 "tags": [], 
                 "type": "one", 
                 "validate": null
                }, 
                {
                 "description": null, 
                 "fields": [
                  {
                   "description": null, 
                   "name": "bank_code", 
                   "nullable": false, 
                   "required": true, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }, 
                  {
                   "description": null, 
                   "name": "routing_number", 
                   "nullable": false, 
                   "required": true, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }
                 ], 
                 "name": [
                  "bank_code", 
                  "routing_number"
                 ], 
                 "required": true, 
                 "tags": [], 
                 "type": "one", 
                 "validate": null
                }
               ], 
               "required": true, 
               "tags": [], 
               "type": "select"
              }, 
              {
               "default": "checking", 
               "description": "``checking`` or ``savings``.", 
               "fields": [
                {
                 "description": null, 
                 "name": "account_type", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }, 
                {
                 "description": null, 
                 "name": "type", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }
               ], 
               "name": [
                "account_type", 
                "type"
               ], 
               "required": false, 
               "tags": [], 
               "type": "one", 
               "validate": null
              }
             ], 
             "name": "BankAccountTokenCreateForm", 
             "type": "form"
            }, 
            "name": "bank_account", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "form_field", 
            "validate": null
           }
          ], 
          "name": "MerchantUpdateForm", 
          "type": "form"
         }, 
         "name": "merchant", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "form_field", 
         "validate": null
        }
       ], 
       "name": [
        "merchant_uri", 
        "merchant"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": "If `account` is not a merchant then:", 
       "fields": [
        {
         "description": null, 
         "name": "merchant_uri", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": null, 
         "form": {
          "fields": [
           {
            "description": "Merchant type. It should be one of: ``person`` or ``business``.", 
            "name": "type", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "E.164 formatted phone number.", 
            "name": "phone_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "RFC-2822 formatted email address.", 
            "name": "email_address", 
            "nullable": true, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": {}, 
            "description": "Single level mapping from string keys to string values.", 
            "name": "meta", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "key-value", 
            "validate": null
           }, 
           {
            "default": "For *person* merchants `tax_id` is optional, defaulting to ``null``.\nFor *business* merchants `tax_id` is required.", 
            "description": null, 
            "name": "tax_id", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": null, 
            "name": "ssn_last_4", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": "For *person* merchants `dob` is required. For *business* merchants\n`dob` is optional, defaulting to ``null``.", 
            "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
            "name": "dob", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": null, 
            "form": {
             "fields": [
              {
               "description": null, 
               "name": "name", 
               "nullable": false, 
               "required": true, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
               "name": "dob", 
               "nullable": false, 
               "required": true, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "fields": [
                {
                 "default": null, 
                 "description": "City.", 
                 "name": "city", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }, 
                {
                 "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
                 "fields": [
                  {
                   "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
                   "name": "region", 
                   "nullable": false, 
                   "required": false, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }, 
                  {
                   "description": "US state. This field has been **deprecated**.", 
                   "name": "state", 
                   "nullable": false, 
                   "required": false, 
                   "tags": [], 
                   "type": "string", 
                   "validate": null
                  }
                 ], 
                 "name": [
                  "region", 
                  "state"
                 ], 
                 "required": false, 
                 "tags": [], 
                 "type": "one", 
                 "validate": null
                }, 
                {
                 "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
                 "name": "postal_code", 
                 "nullable": false, 
                 "required": true, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }, 
                {
                 "default": null, 
                 "description": "Street address.\n*requires* ``postal_code``.", 
                 "name": "street_address", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }, 
                {
                 "default": "USA", 
                 "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
                 "name": "country_code", 
                 "nullable": false, 
                 "required": false, 
                 "tags": [], 
                 "type": "string", 
                 "validate": null
                }
               ], 
               "name": "AddressCreateForm", 
               "tags": [], 
               "type": "form"
              }, 
              {
               "description": null, 
               "name": "tax_id", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "default": null, 
               "description": null, 
               "name": "ssn_last_4", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }
             ], 
             "name": "PersonCreateForm", 
             "type": "form"
            }, 
            "name": "person", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "form_field", 
            "validate": null
           }, 
           {
            "default": "If an account is referenced in the resolving URI then the default is\nnull. If this is nested in an account creation then the account\n``name`` is used. Otherwise no default is provided and this field is\nrequired.", 
            "description": null, 
            "name": "name", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "Flag value, should be ``true`` or ``false``.", 
            "name": "production", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "boolean", 
            "validate": null
           }, 
           {
            "fields": [
             {
              "default": null, 
              "description": "City.", 
              "name": "city", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
              "fields": [
               {
                "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
                "name": "region", 
                "nullable": false, 
                "required": false, 
                "tags": [], 
                "type": "string", 
                "validate": null
               }, 
               {
                "description": "US state. This field has been **deprecated**.", 
                "name": "state", 
                "nullable": false, 
                "required": false, 
                "tags": [], 
                "type": "string", 
                "validate": null
               }
              ], 
              "name": [
               "region", 
               "state"
              ], 
              "required": false, 
              "tags": [], 
              "type": "one", 
              "validate": null
             }, 
             {
              "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
              "name": "postal_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "default": null, 
              "description": "Street address.\n*requires* ``postal_code``.", 
              "name": "street_address", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "default": "USA", 
              "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
              "name": "country_code", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": "AddressCreateForm", 
            "tags": [], 
            "type": "form"
           }
          ], 
          "name": "MerchantAccountCreateForm", 
          "type": "form"
         }, 
         "name": "merchant", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "form_field", 
         "validate": null
        }
       ], 
       "name": [
        "merchant_uri", 
        "merchant"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }
     ], 
     "required": true, 
     "tags": [], 
     "type": "select"
    }, 
    {
     "description": "The display ``name`` of the account.", 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "RFC-2822 formatted email address.", 
     "name": "email_address", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": "- Tokenized card URI.\n- Card information mapping:", 
     "fields": [
      {
       "description": "Tokenized card URI.", 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Card information mapping:", 
       "form": {
        "fields": [
         {
          "description": "The digits of the credit card number.", 
          "name": "card_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Expiration year.", 
          "name": "expiration_year", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "Expiration month (e.g. 1 for January).", 
          "name": "expiration_month", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "The 3-4 digit security code for the card.", 
          "name": "security_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "name", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "E.164 formatted phone number.", 
          "name": "phone_number", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "fields": [
           {
            "default": null, 
            "description": "City.", 
            "name": "city", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
            "fields": [
             {
              "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
              "name": "region", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "US state. This field has been **deprecated**.", 
              "name": "state", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "region", 
             "state"
            ], 
            "required": false, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
            "name": "postal_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "Street address.\n*requires* ``postal_code``.", 
            "name": "street_address", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": "USA", 
            "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
            "name": "country_code", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": "AddressCreateForm", 
          "tags": [], 
          "type": "form"
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }, 
         {
          "default": true, 
          "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``).", 
          "name": "is_valid", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "boolean", 
          "validate": null
         }
        ], 
        "name": "CardCreateForm", 
        "type": "form"
       }, 
       "name": "card", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "card_uri", 
      "card"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "- Tokenized bank account URI.\n- Bank account information:", 
     "fields": [
      {
       "description": "Tokenized bank account URI.", 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Bank account information:", 
       "form": {
        "fields": [
         {
          "description": "Name on the bank account.", 
          "name": "name", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Bank account number.", 
          "name": "account_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "fields": [
             {
              "description": "Bank account code.", 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "Bank account code.", 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": null, 
            "fields": [
             {
              "description": null, 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": null, 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }
          ], 
          "required": true, 
          "tags": [], 
          "type": "select"
         }, 
         {
          "default": "checking", 
          "description": "``checking`` or ``savings``.", 
          "fields": [
           {
            "description": null, 
            "name": "account_type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "account_type", 
           "type"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }
        ], 
        "name": "BankAccountCreateForm", 
        "type": "form"
       }, 
       "name": "bank_account", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "bank_account_uri", 
      "bank_account"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AccountUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
     "name": "postal_code", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "Street address.\n*requires* ``postal_code``.", 
     "name": "street_address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "City.", 
     "name": "city", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "USA", 
     "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
     "name": "country_code", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
     "fields": [
      {
       "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
       "name": "region", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "US state. This field has been **deprecated**.", 
       "name": "state", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "region", 
      "state"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "AddressCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "secret", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Description of a merchant to create and associate with the\nuser.", 
     "form": {
      "fields": [
       {
        "description": "Merchant type. It should be one of: ``person`` or ``business``.", 
        "name": "type", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": null, 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "E.164 formatted phone number.", 
        "name": "phone_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": "RFC-2822 formatted email address.", 
        "name": "email_address", 
        "nullable": true, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": {}, 
        "description": "Single level mapping from string keys to string values.", 
        "name": "meta", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "key-value", 
        "validate": null
       }, 
       {
        "default": true, 
        "description": "Flag value, should be ``true`` or ``false``.", 
        "name": "production", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "boolean", 
        "validate": null
       }, 
       {
        "default": "For *person* merchants `tax_id` is optional, defaulting to ``null``.\nFor *business* merchants `tax_id` is required.", 
        "description": null, 
        "name": "tax_id", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": null, 
        "name": "ssn_last_4", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": "For *person* merchants `dob` is required. For *business* merchants\n`dob` is optional, defaulting to ``null``.", 
        "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
        "name": "dob", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": null, 
        "form": {
         "fields": [
          {
           "description": null, 
           "name": "name", 
           "nullable": false, 
           "required": true, 
           "tags": [], 
           "type": "string", 
           "validate": null
          }, 
          {
           "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
           "name": "dob", 
           "nullable": false, 
           "required": true, 
           "tags": [], 
           "type": "string", 
           "validate": null
          }, 
          {
           "fields": [
            {
             "default": null, 
             "description": "City.", 
             "name": "city", 
             "nullable": false, 
             "required": false, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
             "fields": [
              {
               "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
               "name": "region", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }, 
              {
               "description": "US state. This field has been **deprecated**.", 
               "name": "state", 
               "nullable": false, 
               "required": false, 
               "tags": [], 
               "type": "string", 
               "validate": null
              }
             ], 
             "name": [
              "region", 
              "state"
             ], 
             "required": false, 
             "tags": [], 
             "type": "one", 
             "validate": null
            }, 
            {
             "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
             "name": "postal_code", 
             "nullable": false, 
             "required": true, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "default": null, 
             "description": "Street address.\n*requires* ``postal_code``.", 
             "name": "street_address", 
             "nullable": false, 
             "required": false, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }, 
            {
             "default": "USA", 
             "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
             "name": "country_code", 
             "nullable": false, 
             "required": false, 
             "tags": [], 
             "type": "string", 
             "validate": null
            }
           ], 
           "name": "AddressCreateForm", 
           "tags": [], 
           "type": "form"
          }, 
          {
           "description": null, 
           "name": "tax_id", 
           "nullable": false, 
           "required": false, 
           "tags": [], 
           "type": "string", 
           "validate": null
          }, 
          {
           "default": null, 
           "description": null, 
           "name": "ssn_last_4", 
           "nullable": false, 
           "required": false, 
           "tags": [], 
           "type": "string", 
           "validate": null
          }
         ], 
         "name": "PersonCreateForm", 
         "type": "form"
        }, 
        "name": "person", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "form_field", 
        "validate": null
       }, 
       {
        "fields": [
         {
          "default": null, 
          "description": "City.", 
          "name": "city", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
          "fields": [
           {
            "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
            "name": "region", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "US state. This field has been **deprecated**.", 
            "name": "state", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "region", 
           "state"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
          "name": "postal_code", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "Street address.\n*requires* ``postal_code``.", 
          "name": "street_address", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": "USA", 
          "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
          "name": "country_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": "AddressCreateForm", 
        "tags": [], 
        "type": "form"
       }
      ], 
      "name": "MerchantCreateForm", 
      "type": "form"
     }, 
     "name": "merchant", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }, 
    {
     "description": "A bank account to associate with the user's merchant.", 
     "form": {
      "fields": [
       {
        "description": "Name on the bank account.", 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Bank account number.", 
        "name": "account_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": null, 
        "fields": [
         {
          "description": null, 
          "fields": [
           {
            "description": "Bank account code.", 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "Bank account code.", 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }
        ], 
        "required": true, 
        "tags": [], 
        "type": "select"
       }, 
       {
        "default": "checking", 
        "description": "``checking`` or ``savings``.", 
        "fields": [
         {
          "description": null, 
          "name": "account_type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": [
         "account_type", 
         "type"
        ], 
        "required": false, 
        "tags": [], 
        "type": "one", 
        "validate": null
       }
      ], 
      "name": "BankAccountTokenCreateForm", 
      "type": "form"
     }, 
     "name": "bank_account", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }
   ], 
   "name": "AnonymousAPIKeyCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "amount_1", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "amount_2", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }
   ], 
   "name": "BankAccountAuthenticationUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Name on the bank account.", 
     "name": "name", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Bank account number.", 
     "name": "account_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "fields": [
        {
         "description": "Bank account code.", 
         "name": "bank_code", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "Bank account code.", 
         "name": "routing_number", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "bank_code", 
        "routing_number"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": null, 
       "fields": [
        {
         "description": null, 
         "name": "bank_code", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": null, 
         "name": "routing_number", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "bank_code", 
        "routing_number"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }
     ], 
     "required": true, 
     "tags": [], 
     "type": "select"
    }, 
    {
     "default": "checking", 
     "description": "``checking`` or ``savings``.", 
     "fields": [
      {
       "description": null, 
       "name": "account_type", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "type", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_type", 
      "type"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "BankAccountCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "USD cents. You must have ``amount`` funds transferred to cover the\ncredit.", 
     "name": "amount", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "description", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "BankAccountCreditCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Name on the bank account.", 
     "name": "name", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Bank account number.", 
     "name": "account_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "fields": [
        {
         "description": "Bank account code.", 
         "name": "bank_code", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "Bank account code.", 
         "name": "routing_number", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "bank_code", 
        "routing_number"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": null, 
       "fields": [
        {
         "description": null, 
         "name": "bank_code", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": null, 
         "name": "routing_number", 
         "nullable": false, 
         "required": true, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "bank_code", 
        "routing_number"
       ], 
       "required": true, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }
     ], 
     "required": true, 
     "tags": [], 
     "type": "select"
    }, 
    {
     "default": "checking", 
     "description": "``checking`` or ``savings``.", 
     "fields": [
      {
       "description": null, 
       "name": "account_type", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "type", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_type", 
      "type"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "BankAccountTokenCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": null, 
     "description": "Flag indicating whether the bank account is active (``true``) or not\n(``false``). Setting this to ``false`` will deactivate the bank\naccount.", 
     "name": "is_valid", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }, 
    {
     "description": "- URI of an account with which to associate the bank account.\n- An *object*  containing a `uri` field. The account referenced by\n  `uri` will be associated with the bank account:", 
     "fields": [
      {
       "description": "URI of an account with which to associate the bank account.", 
       "name": "account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "An *object*  containing a `uri` field. The account referenced by\n`uri` will be associated with the bank account:", 
       "field": {
        "description": null, 
        "name": "uri", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       "name": "account", 
       "nullable": true, 
       "required": false, 
       "tags": [], 
       "type": "nested", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "customer_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_uri", 
      "account", 
      "customer_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": "Referenced account must be associated with this marketplace."
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "BankAccountUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "url", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "post", 
     "description": "``post``, ``put``, ``get``.", 
     "name": "method", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "CallbackCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "debit_uri", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "credit_uri", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "refund_uri", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "debit_uri", 
      "credit_uri", 
      "refund_uri"
     ], 
     "required": true, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "CancelTxnForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "The digits of the credit card number.", 
     "name": "card_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Expiration year.", 
     "name": "expiration_year", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": "Expiration month (e.g. 1 for January).", 
     "name": "expiration_month", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": "The 3-4 digit security code for the card.", 
     "name": "security_code", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "E.164 formatted phone number.", 
     "name": "phone_number", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "fields": [
      {
       "default": null, 
       "description": "City.", 
       "name": "city", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
       "fields": [
        {
         "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
         "name": "region", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "US state. This field has been **deprecated**.", 
         "name": "state", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "region", 
        "state"
       ], 
       "required": false, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
       "name": "postal_code", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": null, 
       "description": "Street address.\n*requires* ``postal_code``.", 
       "name": "street_address", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": "USA", 
       "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
       "name": "country_code", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": "AddressCreateForm", 
     "tags": [], 
     "type": "form"
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": true, 
     "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``).", 
     "name": "is_valid", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }
   ], 
   "name": "CardCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": null, 
     "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``). Setting this to ``false`` will deactivate the card.", 
     "name": "is_valid", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "field": {
        "description": null, 
        "name": "uri", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       "name": "account", 
       "nullable": true, 
       "required": false, 
       "tags": [], 
       "type": "nested", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "customer_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_uri", 
      "account", 
      "customer_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": "The referenced account must be associated with this marketplace."
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "CardUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "USD cents. You must have ``amount`` funds transferred to cover the\ncredit.", 
     "name": "amount", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": null, 
     "form": {
      "fields": [
       {
        "description": "Name on the bank account.", 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Bank account number.", 
        "name": "account_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": null, 
        "fields": [
         {
          "description": "Bank account code.", 
          "name": "bank_code", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Bank account code.", 
          "name": "routing_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": [
         "bank_code", 
         "routing_number"
        ], 
        "required": true, 
        "tags": [], 
        "type": "one", 
        "validate": null
       }, 
       {
        "description": "``checking`` or ``savings``.", 
        "name": "type", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": {}, 
        "description": "Single level mapping from string keys to string values.", 
        "name": "meta", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "key-value", 
        "validate": null
       }
      ], 
      "name": "RootBankAccountCreateForm", 
      "type": "form"
     }, 
     "name": "bank_account", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "description", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "CreditCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Name of the customer or representative of the business.", 
     "name": "name", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Email address of the customer.", 
     "name": "email", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": "Last four digits of the Social Security Number of the customer or\nrepresentative of the business.", 
     "name": "ssn_last4", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Full business name if the customer is a business. If there is a business\nname and EIN present, the customer will be treated as a business instead\nof a person.", 
     "name": "business_name", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs representing\nthe address of the person or business.", 
     "form": {
      "fields": [
       {
        "description": "Street address of the person or business.", 
        "name": "line1", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Second line of the address for the person or business.", 
        "name": "line2", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "City of the person or business.", 
        "name": "city", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "State of the person or business.", 
        "name": "state", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Postal code/zip code of the person or business.", 
        "name": "postal_code", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Two character country code.", 
        "name": "country_code", 
        "nullable": false, 
        "required": false, 
        "tags": [
         "hidden_default"
        ], 
        "type": "string", 
        "validate": null
       }
      ], 
      "name": "AddressForm", 
      "type": "form"
     }, 
     "name": "address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }, 
    {
     "description": "Phone number of the person or business.", 
     "name": "phone", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Date of birth of the customer or representative of the business.\nFormat is YYYY-MM e.g. \"1980-05\"", 
     "name": "dob", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Employee Identification Number of the business if the customer is a\nbusiness. If there is a business name and EIN present, the customer will\nbe treated as a business instead of a person.", 
     "name": "ein", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Facebook ID or username of the customer or representative of the\nbusiness", 
     "name": "facebook", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Twitter ID or username of the customer or representative of the business", 
     "name": "twitter", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "- The URI of a card tokenized via *balanced.js*.\n- If you are not tokenizing the card you may pass the data straight\n  through as a map.", 
     "fields": [
      {
       "description": "The URI of a card tokenized via *balanced.js*.", 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "If you are not tokenizing the card you may pass the data straight\nthrough as a map.", 
       "form": {
        "fields": [
         {
          "description": "The digits of the credit card number.", 
          "name": "card_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Expiration year.", 
          "name": "expiration_year", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "Expiration month (e.g. 1 for January).", 
          "name": "expiration_month", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "integer", 
          "validate": null
         }, 
         {
          "description": "The 3-4 digit security code for the card.", 
          "name": "security_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "name", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "E.164 formatted phone number.", 
          "name": "phone_number", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "fields": [
           {
            "default": null, 
            "description": "City.", 
            "name": "city", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
            "fields": [
             {
              "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
              "name": "region", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "US state. This field has been **deprecated**.", 
              "name": "state", 
              "nullable": false, 
              "required": false, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "region", 
             "state"
            ], 
            "required": false, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
            "name": "postal_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": null, 
            "description": "Street address.\n*requires* ``postal_code``.", 
            "name": "street_address", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "default": "USA", 
            "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
            "name": "country_code", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": "AddressCreateForm", 
          "tags": [], 
          "type": "form"
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }, 
         {
          "default": true, 
          "description": "Indicates whether the card is active (``true``) or has been deactivated\n(``false``).", 
          "name": "is_valid", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "boolean", 
          "validate": null
         }
        ], 
        "name": "CardCreateForm", 
        "type": "form"
       }, 
       "name": "card", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "card_uri", 
      "card"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "- The URI of a bank account tokenized via *balanced.js*.\n- If you are not tokenizing the card you may pass the data straight\n  through as a map.", 
     "fields": [
      {
       "description": "The URI of a bank account tokenized via *balanced.js*.", 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "If you are not tokenizing the card you may pass the data straight\nthrough as a map.", 
       "form": {
        "fields": [
         {
          "description": "Name on the bank account.", 
          "name": "name", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Bank account number.", 
          "name": "account_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "fields": [
             {
              "description": "Bank account code.", 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": "Bank account code.", 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }, 
           {
            "description": null, 
            "fields": [
             {
              "description": null, 
              "name": "bank_code", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }, 
             {
              "description": null, 
              "name": "routing_number", 
              "nullable": false, 
              "required": true, 
              "tags": [], 
              "type": "string", 
              "validate": null
             }
            ], 
            "name": [
             "bank_code", 
             "routing_number"
            ], 
            "required": true, 
            "tags": [], 
            "type": "one", 
            "validate": null
           }
          ], 
          "required": true, 
          "tags": [], 
          "type": "select"
         }, 
         {
          "default": "checking", 
          "description": "``checking`` or ``savings``.", 
          "fields": [
           {
            "description": null, 
            "name": "account_type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "type", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "account_type", 
           "type"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }
        ], 
        "name": "BankAccountCreateForm", 
        "type": "form"
       }, 
       "name": "bank_account", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "bank_account_uri", 
      "bank_account"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "CustomerCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "- A customer or the account of a merchant, usually a seller or service\n  provider, that is associated with this card charge or bank account\n  debit.\n- **Deprecated** The account of a merchant, usually a seller or service\n  provider, that is associated with this card charge or bank account\n  debit. Deprecated in favour of ``on_behalf_of_uri``.", 
     "fields": [
      {
       "description": "A customer or the account of a merchant, usually a seller or service\nprovider, that is associated with this card charge or bank account\ndebit.", 
       "name": "on_behalf_of_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "**Deprecated** The account of a merchant, usually a seller or service\nprovider, that is associated with this card charge or bank account\ndebit. Deprecated in favour of ``on_behalf_of_uri``.", 
       "name": "merchant_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "on_behalf_of_uri", 
      "merchant_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": "URI referencing the account of the merchant whom the debit is being\ndone on behalf of. This is different from marketplace. In a\npeer-to-peer transaction, there are three parties:\n\n1. Marketplace\n2. Seller/Service provider\n3. Buyer\n\nThis merchant account represents **2**.\n\n:param field: Either on_behalf_of_uri and merchant_uri\n:param obo: This is a merchant account or customer on a marketplace"
    }, 
    {
     "default": "If the resolving URI references a hold then the default ``amount``\nis the ``amount`` associated with that hold. Otherwise no default\nis provided and this field is **required**.", 
     "description": "If the resolving URI references a hold then this is hold amount. You can\nalways capture less than the hold amount (e.g. a partial capture).\nOtherwise its the maximum per debit amount for your marketplace.", 
     "name": "amount", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "If the resolved URI references an ``account`` then it is used as\nthe default. If a ``hold`` or ``hold_uri`` field is present then the\n``account`` associated with that hold is the default. Otherwise no\ndefault is provided and this field is **required**.", 
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "customer_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_uri", 
      "customer_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "default": "If the resolved URI references a ``hold`` it will be used. Otherwise\ndefaults to ``null``.", 
     "description": "If no ``hold`` is provided one my be generated and captured if the\nfunding source is a card.", 
     "name": "hold_uri", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "- URI of a specific bank account or card to be debited.\n- **Deprecated**\n  This field is deprecated in favour of ``source_uri``.\n- **Deprecated**\n  This field is deprecated in favour of ``source_uri``.", 
     "fields": [
      {
       "description": "URI of a specific bank account or card to be debited.", 
       "name": "source_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "**Deprecated**\nThis field is deprecated in favour of ``source_uri``.", 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "**Deprecated**\nThis field is deprecated in favour of ``source_uri``.", 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "source_uri", 
      "bank_account_uri", 
      "card_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "DebitCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "- A customer or the account of a merchant, usually a seller or service\n  provider, that is associated with this card charge or bank account\n  debit.\n- **Deprecated** The account of a merchant, usually a seller or service\n  provider, that is associated with this card charge or bank account\n  debit. Deprecated in favour of ``on_behalf_of_uri``.", 
     "fields": [
      {
       "description": "A customer or the account of a merchant, usually a seller or service\nprovider, that is associated with this card charge or bank account\ndebit.", 
       "name": "on_behalf_of_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "**Deprecated** The account of a merchant, usually a seller or service\nprovider, that is associated with this card charge or bank account\ndebit. Deprecated in favour of ``on_behalf_of_uri``.", 
       "name": "merchant_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "on_behalf_of_uri", 
      "merchant_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": "URI referencing the account of the merchant whom the debit is being\ndone on behalf of. This is different from marketplace. In a\npeer-to-peer transaction, there are three parties:\n\n1. Marketplace\n2. Seller/Service provider\n3. Buyer\n\nThis merchant account represents **2**.\n\n:param field: Either on_behalf_of_uri and merchant_uri\n:param obo: This is a merchant account or customer on a marketplace"
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "DebitUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "amount", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "default": "If the resolving URI references an ``account`` then that is used as the\ndefault. Otherwise no default is provided and this field is\n**required**.", 
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "account_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "customer_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "account_uri", 
      "customer_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": "If the resolving URI references an ``account`` then account's primary\nfunding source  is used. Otherwise no default is provided and this\nfield is required.", 
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "source_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "card_uri", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "source_uri", 
      "card_uri"
     ], 
     "required": false, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }
   ], 
   "name": "HoldCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "Flag value, should be ``true`` or ``false``.", 
     "name": "is_void", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "HoldUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": "support@example.com", 
     "description": "RFC-2822 formatted email address.", 
     "name": "support_email_address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "Test Marketplace", 
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "example.com", 
     "description": null, 
     "name": "domain_url", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "+16505551234", 
     "description": "E.164 formatted phone number.", 
     "name": "support_phone_number", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": {
      "email_address": null, 
      "name": null
     }, 
     "description": null, 
     "form": {
      "fields": [
       {
        "default": null, 
        "description": null, 
        "name": "name", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": "RFC-2822 formatted email address.", 
        "name": "email_address", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }
      ], 
      "name": "OwnerAccountCreateForm", 
      "type": "form"
     }, 
     "name": "owner_account", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }
   ], 
   "name": "MarketplaceCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "USD cents.", 
     "name": "amount", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": null, 
       "name": "destination_uri", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "name": "bank_account_uri", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": null, 
       "form": {
        "fields": [
         {
          "description": "Name on the bank account.", 
          "name": "name", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "Bank account number.", 
          "name": "account_number", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": "Bank account code.", 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "Bank account code.", 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": "``checking`` or ``savings``.", 
          "name": "type", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": {}, 
          "description": "Single level mapping from string keys to string values.", 
          "name": "meta", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "key-value", 
          "validate": null
         }
        ], 
        "name": "RootBankAccountCreateForm", 
        "type": "form"
       }, 
       "name": "bank_account", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "form_field", 
       "validate": null
      }
     ], 
     "name": [
      "destination_uri", 
      "bank_account_uri", 
      "bank_account"
     ], 
     "required": true, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "description", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": "Text that will appear on the buyer's statement. Characters that can be\nused are limited to:\n\n- ASCII letters (``a-z`` and ``A-Z``)\n- Digits (``0-9``)\n- Special characters (``.<>(){}[]+&!$*;-%_?:#@~='\" ^\\`|``)\n\nAny other characters will be rejected.", 
     "name": "appears_on_statement_as", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "MarketplaceCreditCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "MarketplaceCreditUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "RFC-2822 formatted email address.", 
     "name": "support_email_address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "E.164 formatted phone number.", 
     "name": "support_phone_number", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "domain_url", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "MarketplaceUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Merchant type. It should be one of: ``person`` or ``business``.", 
     "name": "type", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "E.164 formatted phone number.", 
     "name": "phone_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "RFC-2822 formatted email address.", 
     "name": "email_address", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": "For *person* merchants `tax_id` is optional, defaulting to ``null``.\nFor *business* merchants `tax_id` is required.", 
     "description": null, 
     "name": "tax_id", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "ssn_last_4", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "For *person* merchants `dob` is required. For *business* merchants\n`dob` is optional, defaulting to ``null``.", 
     "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
     "name": "dob", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "form": {
      "fields": [
       {
        "description": null, 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
        "name": "dob", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "fields": [
         {
          "default": null, 
          "description": "City.", 
          "name": "city", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
          "fields": [
           {
            "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
            "name": "region", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "US state. This field has been **deprecated**.", 
            "name": "state", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "region", 
           "state"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
          "name": "postal_code", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "Street address.\n*requires* ``postal_code``.", 
          "name": "street_address", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": "USA", 
          "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
          "name": "country_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": "AddressCreateForm", 
        "tags": [], 
        "type": "form"
       }, 
       {
        "description": null, 
        "name": "tax_id", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": null, 
        "name": "ssn_last_4", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }
      ], 
      "name": "PersonCreateForm", 
      "type": "form"
     }, 
     "name": "person", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }, 
    {
     "default": "If an account is referenced in the resolving URI then the default is\nnull. If this is nested in an account creation then the account\n``name`` is used. Otherwise no default is provided and this field is\nrequired.", 
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "Flag value, should be ``true`` or ``false``.", 
     "name": "production", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }, 
    {
     "fields": [
      {
       "default": null, 
       "description": "City.", 
       "name": "city", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
       "fields": [
        {
         "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
         "name": "region", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "US state. This field has been **deprecated**.", 
         "name": "state", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "region", 
        "state"
       ], 
       "required": false, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
       "name": "postal_code", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": null, 
       "description": "Street address.\n*requires* ``postal_code``.", 
       "name": "street_address", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": "USA", 
       "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
       "name": "country_code", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": "AddressCreateForm", 
     "tags": [], 
     "type": "form"
    }
   ], 
   "name": "MerchantAccountCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Merchant type. It should be one of: ``person`` or ``business``.", 
     "name": "type", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "E.164 formatted phone number.", 
     "name": "phone_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "RFC-2822 formatted email address.", 
     "name": "email_address", 
     "nullable": true, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": true, 
     "description": "Flag value, should be ``true`` or ``false``.", 
     "name": "production", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "boolean", 
     "validate": null
    }, 
    {
     "default": "For *person* merchants `tax_id` is optional, defaulting to ``null``.\nFor *business* merchants `tax_id` is required.", 
     "description": null, 
     "name": "tax_id", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "ssn_last_4", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": "For *person* merchants `dob` is required. For *business* merchants\n`dob` is optional, defaulting to ``null``.", 
     "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
     "name": "dob", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "form": {
      "fields": [
       {
        "description": null, 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
        "name": "dob", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "fields": [
         {
          "default": null, 
          "description": "City.", 
          "name": "city", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
          "fields": [
           {
            "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
            "name": "region", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "US state. This field has been **deprecated**.", 
            "name": "state", 
            "nullable": false, 
            "required": false, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "region", 
           "state"
          ], 
          "required": false, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
          "name": "postal_code", 
          "nullable": false, 
          "required": true, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": null, 
          "description": "Street address.\n*requires* ``postal_code``.", 
          "name": "street_address", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "default": "USA", 
          "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
          "name": "country_code", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": "AddressCreateForm", 
        "tags": [], 
        "type": "form"
       }, 
       {
        "description": null, 
        "name": "tax_id", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "default": null, 
        "description": null, 
        "name": "ssn_last_4", 
        "nullable": false, 
        "required": false, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }
      ], 
      "name": "PersonCreateForm", 
      "type": "form"
     }, 
     "name": "person", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }, 
    {
     "fields": [
      {
       "default": null, 
       "description": "City.", 
       "name": "city", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
       "fields": [
        {
         "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
         "name": "region", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "US state. This field has been **deprecated**.", 
         "name": "state", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "region", 
        "state"
       ], 
       "required": false, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
       "name": "postal_code", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": null, 
       "description": "Street address.\n*requires* ``postal_code``.", 
       "name": "street_address", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": "USA", 
       "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
       "name": "country_code", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": "AddressCreateForm", 
     "tags": [], 
     "type": "form"
    }
   ], 
   "name": "MerchantCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "RFC-2822 formatted email address.", 
     "name": "email_address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "E.164 formatted phone number.", 
     "name": "phone_number", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "description": null, 
     "form": {
      "fields": [
       {
        "description": "Name on the bank account.", 
        "name": "name", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": "Bank account number.", 
        "name": "account_number", 
        "nullable": false, 
        "required": true, 
        "tags": [], 
        "type": "string", 
        "validate": null
       }, 
       {
        "description": null, 
        "fields": [
         {
          "description": null, 
          "fields": [
           {
            "description": "Bank account code.", 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": "Bank account code.", 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }, 
         {
          "description": null, 
          "fields": [
           {
            "description": null, 
            "name": "bank_code", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }, 
           {
            "description": null, 
            "name": "routing_number", 
            "nullable": false, 
            "required": true, 
            "tags": [], 
            "type": "string", 
            "validate": null
           }
          ], 
          "name": [
           "bank_code", 
           "routing_number"
          ], 
          "required": true, 
          "tags": [], 
          "type": "one", 
          "validate": null
         }
        ], 
        "required": true, 
        "tags": [], 
        "type": "select"
       }, 
       {
        "default": "checking", 
        "description": "``checking`` or ``savings``.", 
        "fields": [
         {
          "description": null, 
          "name": "account_type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }, 
         {
          "description": null, 
          "name": "type", 
          "nullable": false, 
          "required": false, 
          "tags": [], 
          "type": "string", 
          "validate": null
         }
        ], 
        "name": [
         "account_type", 
         "type"
        ], 
        "required": false, 
        "tags": [], 
        "type": "one", 
        "validate": null
       }
      ], 
      "name": "BankAccountTokenCreateForm", 
      "type": "form"
     }, 
     "name": "bank_account", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "form_field", 
     "validate": null
    }
   ], 
   "name": "MerchantUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Date-of-birth formatted as ``YYYY-MM-DD``.", 
     "name": "dob", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "fields": [
      {
       "default": null, 
       "description": "City.", 
       "name": "city", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "- Region (e.g. state, province, etc). This field has been\n  **deprecated**.\n- US state. This field has been **deprecated**.", 
       "fields": [
        {
         "description": "Region (e.g. state, province, etc). This field has been\n**deprecated**.", 
         "name": "region", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }, 
        {
         "description": "US state. This field has been **deprecated**.", 
         "name": "state", 
         "nullable": false, 
         "required": false, 
         "tags": [], 
         "type": "string", 
         "validate": null
        }
       ], 
       "name": [
        "region", 
        "state"
       ], 
       "required": false, 
       "tags": [], 
       "type": "one", 
       "validate": null
      }, 
      {
       "description": "Postal code. This is known as a zip code in the USA.\n*requires* ``country_code``.", 
       "name": "postal_code", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": null, 
       "description": "Street address.\n*requires* ``postal_code``.", 
       "name": "street_address", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "default": "USA", 
       "description": "`ISO-3166-3\n<http://www.iso.org/iso/home/standards/country_codes.htm#2012_iso3166-3>`_\nthree character country code.", 
       "name": "country_code", 
       "nullable": false, 
       "required": false, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": "AddressCreateForm", 
     "tags": [], 
     "type": "form"
    }, 
    {
     "description": null, 
     "name": "tax_id", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": null, 
     "name": "ssn_last_4", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "PersonCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": null, 
     "description": null, 
     "name": "amount", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }, 
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }, 
    {
     "default": "If the resolving URI references a ``debit`` then that is used as the\ndefault. Otherwise no default is provided and this field is\n**required**.", 
     "description": null, 
     "name": "debit_uri", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "RefundCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "description", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "RefundUpdateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Name on the bank account.", 
     "name": "name", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Bank account number.", 
     "name": "account_number", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": null, 
     "fields": [
      {
       "description": "Bank account code.", 
       "name": "bank_code", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }, 
      {
       "description": "Bank account code.", 
       "name": "routing_number", 
       "nullable": false, 
       "required": true, 
       "tags": [], 
       "type": "string", 
       "validate": null
      }
     ], 
     "name": [
      "bank_code", 
      "routing_number"
     ], 
     "required": true, 
     "tags": [], 
     "type": "one", 
     "validate": null
    }, 
    {
     "description": "``checking`` or ``savings``.", 
     "name": "type", 
     "nullable": false, 
     "required": true, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": {}, 
     "description": "Single level mapping from string keys to string values.", 
     "name": "meta", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "key-value", 
     "validate": null
    }
   ], 
   "name": "RootBankAccountCreateForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": [], 
     "description": null, 
     "field": {
      "description": null, 
      "name": "marketplace_uri", 
      "nullable": false, 
      "required": true, 
      "tags": [], 
      "type": "string", 
      "validate": null
     }, 
     "name": "marketplaces", 
     "tags": [], 
     "type": "list", 
     "validate": null
    }, 
    {
     "default": 3, 
     "description": null, 
     "name": "days", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "integer", 
     "validate": null
    }
   ], 
   "name": "StaleBankAccountVerificationsForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "description": "Street address of the person or business.", 
     "name": "line1", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Second line of the address for the person or business.", 
     "name": "line2", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "City of the person or business.", 
     "name": "city", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "State of the person or business.", 
     "name": "state", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Postal code/zip code of the person or business.", 
     "name": "postal_code", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }, 
    {
     "description": "Two character country code.", 
     "name": "country_code", 
     "nullable": false, 
     "required": false, 
     "tags": [
      "hidden_default"
     ], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "AddressForm", 
   "type": "form"
  }, 
  {
   "fields": [
    {
     "default": null, 
     "description": null, 
     "name": "name", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }, 
    {
     "default": null, 
     "description": "RFC-2822 formatted email address.", 
     "name": "email_address", 
     "nullable": false, 
     "required": false, 
     "tags": [], 
     "type": "string", 
     "validate": null
    }
   ], 
   "name": "OwnerAccountCreateForm", 
   "type": "form"
  }
 ], 
 "queries": [
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "email", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "email_address", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "roles", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }
   ], 
   "name": "AccountsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "email_address", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }
   ], 
   "name": "MerchantAccountsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }
   ], 
   "name": "BankAccountAuthenticationsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Boolean fields.", 
     "name": "is_valid", 
     "ops": [
      "=", 
      "!="
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }
   ], 
   "name": "BankAccountsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }
   ], 
   "name": "CallbacksIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "hash", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Boolean fields.", 
     "name": "is_valid", 
     "ops": [
      "=", 
      "!="
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }
   ], 
   "name": "CardsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "state", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }
   ], 
   "name": "ChargebacksIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "status", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "transaction_number", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }
   ], 
   "name": "CreditsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": null, 
     "name": "on_behalf_of_uri", 
     "ops": [
      "=", 
      "!=", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "transaction_number", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }
   ], 
   "name": "DebitsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "occurred_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "status", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }
   ], 
   "name": "EventCallbackLogsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "contains", 
     "description": null, 
     "name": "callbacks", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "occurred_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "type", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }
   ], 
   "name": "EventsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "expires_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Boolean fields.", 
     "name": "is_void", 
     "ops": [
      "=", 
      "!="
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "transaction_number", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }
   ], 
   "name": "HoldsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "sequence_number", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }
   ], 
   "name": "InvoicesIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "name", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Boolean fields.", 
     "name": "production", 
     "ops": [
      "=", 
      "!="
     ], 
     "sortable": true
    }
   ], 
   "name": "MarketplacesIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "email_address", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "contains", 
     "description": "A single level key-value structure where both key and value can only\nbe strings.\n\nThis example shows how to check if a key is in the field:\n\n    {'e[contains]': 'universe'}\n\nWhile this example shows how to check if a key in the field has a\nparticular value:\n\n    {'e.rating': 'ultra-shady'}\n\nAnd of course you can check many key, value pairs for a particular value:\n\n    {'e.rating': 'ultra-shady',\n     'e.street': 'band',\n     }", 
     "name": "meta", 
     "ops": [
      "contains", 
      "!contains"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "name", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": true
    }
   ], 
   "name": "MerchantsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "transaction_number", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }
   ], 
   "name": "RefundsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "transaction_number", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }
   ], 
   "name": "ReversalsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "q", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "contains", 
     "description": null, 
     "name": "type", 
     "ops": [
      "contains", 
      "!contains", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }
   ], 
   "name": "SearchIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }
   ], 
   "name": "SettlementsIndex"
  }, 
  {
   "fields": [
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "amount", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "ISO-8601 formatted date-time type fields.", 
     "name": "created_at", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">="
     ], 
     "sortable": true
    }, 
    {
     "default_op": "=", 
     "description": "Integer type fields.", 
     "name": "depth", 
     "ops": [
      "=", 
      "!=", 
      "<", 
      "<=", 
      ">", 
      ">=", 
      "in", 
      "!in"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "=", 
     "description": "String fields.", 
     "name": "description", 
     "ops": [
      "=", 
      "!=", 
      "startswith", 
      "endswith", 
      "contains", 
      "!contains", 
      "in", 
      "!in", 
      "ilike", 
      "!ilike"
     ], 
     "sortable": false
    }, 
    {
     "default_op": "in", 
     "description": null, 
     "name": "type", 
     "ops": [
      "in", 
      "!in", 
      "="
     ], 
     "sortable": false
    }
   ], 
   "name": "TransactionsIndex"
  }
 ], 
 "views": [
  {
   "fields": [
    {
     "description": "URI for all bank accounts associated with the account.", 
     "name": "bank_accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all cards associated with the account.", 
     "name": "cards_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\naccount was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all credits associated with the account.", 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all debits associated with the account.", 
     "name": "debits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The email address of the account.", 
     "name": "email_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all holds associated with the account.", 
     "name": "holds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "merchant_uri", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The name of the account.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all refunds associated with the account.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A list of roles the account has. Can be zero, one, or both of\n``buyer``, ``merchant``", 
     "name": "roles", 
     "tags": [], 
     "type": "list"
    }, 
    {
     "description": "URI for all transactions associated with the account.", 
     "name": "transactions_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of the account.", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Account"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "city", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "postal_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "region", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "state", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "street_address", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Address"
  }, 
  {
   "fields": [
    {
     "description": "A key/value collection of aggregated callbacks and statuses where the\nkey is the status and the value is the number of callbacks for this\nevent in that state.", 
     "name": "callback_statuses", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "callbacks", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Snapshot of the resource associated with this event at the time it\noccurred.", 
     "name": "entity", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nevent occurred.", 
     "name": "occurred_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "AuditEvent"
  }, 
  {
   "fields": [
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "attempt_limit", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "attempts", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "attempts_remaining", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "callback_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "event_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "logs_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "url", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "AuditEventCallback"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "callback_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "event_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "occurred_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "request_body", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "request_mime_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "response_body", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "response_mime_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "response_status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "AuditEventCallbackLog"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The name of the bank.", 
     "name": "bank_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Flag indicating whether this funding instrument can be debited (true)\nor not (false).", 
     "name": "can_debit", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nbank account was tokenized.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Uniquely identifies the bank account (``account_number`` and\n``routing_number``).", 
     "name": "fingerprint", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "Name of the account holder.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Meets `MICR <http://en.wikipedia.org/wiki/Routing_transit_number#MICR_Routing_number_format>`_\nrouting number format. Specified in FedACH database defined by the\n`US Federal Reserve <http://www.fedwiredirectory.frb.org/>`_.", 
     "name": "routing_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "``checking`` or ``savings``.", 
     "name": "type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Most recent verification for this bank account.", 
     "name": "verification_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "verifications_uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "BankAccount"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "attempts", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "remaining_attempts", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "One of ``pending``, ``verified``, ``failed``.", 
     "name": "state", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "BankAccountAuthentication"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The name of the bank.", 
     "name": "bank_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nbank account was tokenized.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Uniquely identifies the bank account (``account_number`` and\n``routing_number``).", 
     "name": "fingerprint", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Name of the account holder.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Meets `MICR <http://en.wikipedia.org/wiki/Routing_transit_number#MICR_Routing_number_format>`_\nrouting number format. Specified in FedACH database defined by the\n`US Federal Reserve <http://www.fedwiredirectory.frb.org/>`_.", 
     "name": "routing_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "``checking`` or ``savings``.", 
     "name": "type", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "BankAccountToken"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "method", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URL that will receive events", 
     "name": "url", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Callback"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "The brand of the card. One of: ``Visa``, ``MasterCard``,\n``American Express``, or ``Discover``.", 
     "name": "brand", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "**Deprecated**\nThe type of the card. This field has been deprecated in favor of\n``brand``.", 
     "name": "card_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO-3166-3`_ three character country code.", 
     "name": "country_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this card\nwas tokenized.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Card's expiration month.", 
     "name": "expiration_month", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Card's expiration year.", 
     "name": "expiration_year", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A hash derived from ``card_number``, ``expiration_month`` and\n``expiration_year``. Cards with the same ``card_number``,\n``expiration_month`` and ``expiration_year`` will have the same\n``hash``.", 
     "name": "hash", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A boolean value indicating whether or not the card is valid. Once\ninvalidated, ``is_valid`` can not be set to ``true`` again.", 
     "name": "is_valid", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "Last four digits of the card.", 
     "name": "last_four", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The name on the card.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Postal code (zip code in the USA).", 
     "name": "postal_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of \"passed\", \"failed\", \"unknown\"", 
     "name": "postal_code_check", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of \"passed\", \"failed\", \"unknown\"", 
     "name": "security_code_check", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Street address.", 
     "name": "street_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of the card", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Card"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Amount of the credit.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "The text that will appear on the merchant's bank statement.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "bank_account", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Present if the credit went to a customer instead of directly to a\nbank account.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The funding destination for this credit (i.e., a bank account).", 
     "name": "destination", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "Use ``status`` instead.", 
     "name": "state", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of ``pending``, ``paid``, ``failed``.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Credit"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "The amount of the debit.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "The text that will appear on the buyer's statement.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ntransaction is guaranteed to clear.", 
     "name": "available_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ndebit was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The customer to which this debit is associated.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Free-text description of the debit.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The original hold for this debit, if this debit was to a card.\nIf the debit was to a bank account, this field will be null.", 
     "name": "hold", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "URI for any partial or complete refunds of this debit.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The funding source (card or bank account) for this debit.", 
     "name": "source", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "One of ``pending``, ``charged``, ``failed``.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of the debit.", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Debit"
  }, 
  {
   "fields": [
    {
     "description": "The amount of the debit_chargeback", 
     "name": "amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ndebit_chargeback was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "state", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "DebitChargeback"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "FieldMapping"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "constant", 
     "value": "not-authorized"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "constant", 
     "value": "permission"
    }, 
    {
     "description": "Description of the exception", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Forbidden"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Description of the exception", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "HTTPException"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Amount of the hold.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nhold was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The customer against which this hold was created.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The captured debit associated with this hold.", 
     "name": "debit", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "A description of the hold, used for display purposes.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nhold was will expire and can **NO LONGER BE CAPTURED**.", 
     "name": "expires_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A boolean flag indicating if the hold has been voided or not.", 
     "name": "is_void", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The funding source for this hold.", 
     "name": "source", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Hold"
  }, 
  {
   "fields": [
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bin", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "brand", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "card_category", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "card_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "country_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "country_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "iso2", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "iso3", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "phone_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "url", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "IIN"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "bug_url", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "InternalServerError"
  }, 
  {
   "fields": [
    {
     "description": "URI for all accounts on this marketplace.", 
     "name": "accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "bank_accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "callbacks_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "cards_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all credits for this marketplace.", 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customers_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all debits for this marketplace.", 
     "name": "debits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "domain_url", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "events_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all holds for this marketplace.", 
     "name": "holds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The id of this marketplace", 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Amount (in cents) in the escrow account for this marketplace.", 
     "name": "in_escrow", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "Name of this marketplace.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The account owning this marketplace.", 
     "name": "owner_account", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "owner_customer", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "URI for all refunds for this marketplace.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Email address on file for support for this marketplace.", 
     "name": "support_email_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Phone number on file for support for this marketplace.", 
     "name": "support_phone_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all transactions for this marketplace.", 
     "name": "transactions_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of this marketplace", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Marketplace"
  }, 
  {
   "fields": [
    {
     "description": "Accounts belonging to this merchant.", 
     "name": "accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for this merchant's API keys.", 
     "name": "api_keys_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Merchant's account balance.", 
     "name": "balance", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "city", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "country_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nmerchant was underwritten.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Email address of the business, for a business-type merchant.\nEmail address of the person, for a person-type merchant.", 
     "name": "email_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The id of this merchant.", 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "marketplace", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The name of the business, for a business-type merchant.\nThe name of the person, for a person-type merchant.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The merchant's phone number.", 
     "name": "phone_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "postal_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "street_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Merchant type. It will be one of: ``person`` or ``business``", 
     "name": "type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of this merchant.", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Merchant"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "constant", 
     "value": "method-not-allowed"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "constant", 
     "value": "request"
    }, 
    {
     "description": "Description of the exception", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "MethodNotAllowed"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "constant", 
     "value": "not-found"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "constant", 
     "value": "request"
    }, 
    {
     "description": "Description of the exception", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "NotFound"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "first_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "items", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "last_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "limit", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "next_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "offset", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "previous_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "total", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Paginate"
  }, 
  {
   "fields": [
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "counts", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "first_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "items", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "last_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "limit", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "next_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "offset", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "previous_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "total", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "PaginateSearch"
  }, 
  {
   "fields": [
    {
     "description": "Date of birth (YYYY-MM format).", 
     "name": "dob", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "first_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "last_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "middle_name", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Person"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "The amount of the refund.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "Text that will appear on the statement describing this refund.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nrefund was issued.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Customer receiving the refund.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The original debit associated with the refund.", 
     "name": "debit", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Free-text description of the refund.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Refund"
  }, 
  {
   "fields": [
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "data", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "keys", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "ResultSet"
  }, 
  {
   "fields": [
    {
     "description": "Any additional information that may describe how to resolve the issue.", 
     "name": "additional", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The code of the exception.", 
     "name": "category_code", 
     "tags": [], 
     "type": "constant", 
     "value": "authentication-required"
    }, 
    {
     "description": "The type of the exception. Values: ``request``,\n``banking``, or ``logical``", 
     "name": "category_type", 
     "tags": [], 
     "type": "constant", 
     "value": "permission"
    }, 
    {
     "description": "Description of the exception", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Any extra information associated with this exception.", 
     "name": "extras", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An ID that can be used to identify and debug the exception.", 
     "name": "request_id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "HTTP response code of the exception.", 
     "name": "status_code", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Unauthorized"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account", 
     "tags": [], 
     "type": "unknown"
    }, 
    {
     "description": null, 
     "name": "account_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The name of the bank.", 
     "name": "bank_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Flag indicating whether this funding instrument can be debited (true)\nor not (false).", 
     "name": "can_debit", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nbank account was tokenized.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Uniquely identifies the bank account (``account_number`` and\n``routing_number``).", 
     "name": "fingerprint", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "Name of the account holder.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Meets `MICR <http://en.wikipedia.org/wiki/Routing_transit_number#MICR_Routing_number_format>`_\nrouting number format. Specified in FedACH database defined by the\n`US Federal Reserve <http://www.fedwiredirectory.frb.org/>`_.", 
     "name": "routing_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "``checking`` or ``savings``.", 
     "name": "type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Most recent verification for this bank account.", 
     "name": "verification_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "verifications_uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerBankAccount"
  }, 
  {
   "fields": [], 
   "name": "ProxyMapper"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account", 
     "tags": [], 
     "type": "unknown"
    }, 
    {
     "description": "The brand of the card. One of: ``Visa``, ``MasterCard``,\n``American Express``, or ``Discover``.", 
     "name": "brand", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "**Deprecated**\nThe type of the card. This field has been deprecated in favor of\n``brand``.", 
     "name": "card_type", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO-3166-3`_ three character country code.", 
     "name": "country_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this card\nwas tokenized.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Card's expiration month.", 
     "name": "expiration_month", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Card's expiration year.", 
     "name": "expiration_year", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A hash derived from ``card_number``, ``expiration_month`` and\n``expiration_year``. Cards with the same ``card_number``,\n``expiration_month`` and ``expiration_year`` will have the same\n``hash``.", 
     "name": "hash", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A boolean value indicating whether or not the card is valid. Once\ninvalidated, ``is_valid`` can not be set to ``true`` again.", 
     "name": "is_valid", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "Last four digits of the card.", 
     "name": "last_four", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The name on the card.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Postal code (zip code in the USA).", 
     "name": "postal_code", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of \"passed\", \"failed\", \"unknown\"", 
     "name": "postal_code_check", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of \"passed\", \"failed\", \"unknown\"", 
     "name": "security_code_check", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Street address.", 
     "name": "street_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerCard"
  }, 
  {
   "fields": [
    {
     "description": "Present if the credit went to a merchant instead of directly to a\nbank account.", 
     "name": "account", 
     "tags": [], 
     "type": "unknown"
    }, 
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Amount of the credit.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "The text that will appear on the merchant's bank statement.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "bank_account", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Present if the credit went to a customer instead of directly to a\nbank account.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The funding destination for this credit (i.e., a bank account).", 
     "name": "destination", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "Use ``status`` instead.", 
     "name": "state", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "One of ``pending``, ``paid``, ``failed``.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerCredit"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Transaction"
  }, 
  {
   "fields": [
    {
     "description": "A single-level dictionary of string-type key/value pairs representing\nthe address of the person or business.", 
     "name": "address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "URI for all bank accounts associated with the customer.", 
     "name": "bank_accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Full business name if the customer is a business. If there is a\nbusiness name and EIN present, the customer will be treated as a\nbusiness instead of a person.", 
     "name": "business_name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all cards associated with the customer.", 
     "name": "cards_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ncustomer was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all credits associated with the customer.", 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all debits associated with the customer.", 
     "name": "debits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The default bank account that will be credited.", 
     "name": "destination_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Date of birth of the customer or representative of the business.\nFormat is YYYY-MM e.g. \"1980-05\"", 
     "name": "dob", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Employee Identification Number of the business if the customer is a\nbusiness. If there is a business name and EIN present, the customer\nwill be treated as a business instead of a person.", 
     "name": "ein", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Email address of the person or business.", 
     "name": "email", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Facebook ID or username of the customer or representative of the\nbusiness.", 
     "name": "facebook", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all holds associated with the customer.", 
     "name": "holds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Indicates if Balanced was able to match the identify information\nprovided for the customer.", 
     "name": "is_identity_verified", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Name of the customer or representative of the business.", 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Phone number of the person or business.", 
     "name": "phone", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all refunds associated with the customer.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The default credit card that will be debited.", 
     "name": "source_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Last four digits of the Social Security Number of the customer or\nrepresentative of the business.", 
     "name": "ssn_last4", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all transactions associated with the customer.", 
     "name": "transactions_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Twitter ID or username of the customer or representative of the\nbusiness.", 
     "name": "twitter", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of this customer.", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Customer"
  }, 
  {
   "fields": [
    {
     "description": "URI for all bank accounts associated with the customer.", 
     "name": "bank_accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all cards associated with the customer.", 
     "name": "cards_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all credits associated with the customer.", 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all debits associated with the customer.", 
     "name": "debits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all holds associated with the customer.", 
     "name": "holds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all refunds associated with the customer.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "URI for all transactions associated with the customer.", 
     "name": "transactions_uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerTransactionsMixin"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "The amount of the debit.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "The text that will appear on the buyer's statement.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ntransaction is guaranteed to clear.", 
     "name": "available_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\ndebit was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The customer to which this debit is associated.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Free-text description of the debit.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The original hold for this debit, if this debit was to a card.\nIf the debit was to a bank account, this field will be null.", 
     "name": "hold", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "URI for any partial or complete refunds of this debit.", 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The funding source (card or bank account) for this debit.", 
     "name": "source", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "One of ``pending``, ``charged``, ``failed``.", 
     "name": "status", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The URI of the debit.", 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerDebit"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "bank_accounts_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "cards_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "credits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "customer_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "debits_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "email_address", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "holds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "merchant_uri", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Key-Value mapping.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": null, 
     "name": "name", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "refunds_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "List", 
     "name": "roles", 
     "tags": [], 
     "type": "list"
    }, 
    {
     "description": null, 
     "name": "transactions_uri", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "Account"
  }, 
  {
   "fields": [
    {
     "description": "The account against which this hold was created.", 
     "name": "account", 
     "tags": [], 
     "type": "unknown"
    }, 
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Amount of the hold.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nhold was created.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The customer against which this hold was created.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The captured debit associated with this hold.", 
     "name": "debit", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "A description of the hold, used for display purposes.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nhold was will expire and can **NO LONGER BE CAPTURED**.", 
     "name": "expires_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A boolean flag indicating if the hold has been voided or not.", 
     "name": "is_void", 
     "tags": [], 
     "type": "boolean"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "The funding source for this hold.", 
     "name": "source", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerHold"
  }, 
  {
   "fields": [
    {
     "description": null, 
     "name": "adjustments", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "adjustments_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "adjustments_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank_account_debit_variable_fee_cap", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank_account_debit_variable_fee_percentage", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank_account_debits_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank_account_debits_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "bank_account_debits_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "card_debits_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "card_debits_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "card_debits_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "chargeback_fixed_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "credit_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "credits_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "credits_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "credits_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "debits_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "debits_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "debits_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "failed_credit_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "failed_credits_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "failed_credits_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "failed_credits_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "hold_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "holds_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "holds_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "holds_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "lost_debit_chargebacks_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "lost_debit_chargebacks_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "lost_debit_chargebacks_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "period", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "refund_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "refunds_count", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "refunds_total_amount", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "refunds_total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "source", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "total_fee", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Resolves a particular field of an object (e.g. o.some.random.field). It\nwill also check if this object is part is part of a cycle as indicated by\ncontext's `cycle` attribute and what to do about it as indicated by\ncontext's `cycle_default` attribute. If SKIP then the spec returns NONE\nindicating the spec should be ignored otherwise a ValueError is raised.\n\n`name`\n    The name of the field to pull off the object and return. If name is\n    None (the default) it is taken from context's `name` attribute. For\n    details on how fields are parsed and how they resolve to the attribute\n    value(s) of an object see `resolve_field`.\n\n`default`\n    Determines how to handle the case where the field cannot be resolved\n    for an object which should be either SKIP or NONE. If SKIP then the\n    spec will return NONE when the field cannot be resolved otherwise it is\n    NONE and an AttributeError is raised.", 
     "name": "variable_fee_percentage", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "_Common"
  }, 
  {
   "fields": [
    {
     "description": "Account receiving the refund.", 
     "name": "account", 
     "tags": [], 
     "type": "unknown"
    }, 
    {
     "description": null, 
     "name": "account_email_address", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": null, 
     "name": "account_name", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "The amount of the refund.", 
     "name": "amount", 
     "tags": [], 
     "type": "integer"
    }, 
    {
     "description": "Text that will appear on the statement describing this refund.", 
     "name": "appears_on_statement_as", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "`ISO 8601 <http://www.w3.org/QA/Tips/iso-date>`_ date of when this\nrefund was issued.", 
     "name": "created_at", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "Customer receiving the refund.", 
     "name": "customer", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "The original debit associated with the refund.", 
     "name": "debit", 
     "tags": [], 
     "type": "object"
    }, 
    {
     "description": "Free-text description of the refund.", 
     "name": "description", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "id", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": "A single-level dictionary of string-type key/value pairs.", 
     "name": "meta", 
     "tags": [], 
     "type": "key-value"
    }, 
    {
     "description": "An identifier for this transaction.", 
     "name": "transaction_number", 
     "tags": [], 
     "type": "string"
    }, 
    {
     "description": null, 
     "name": "uri", 
     "tags": [], 
     "type": "string"
    }
   ], 
   "name": "CustomerRefund"
  }
 ]
}